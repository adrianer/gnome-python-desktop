# -*- python -*-
# encoding: utf-8

import os
import Common

def configure(conf):
    conf.env.append_value('MODULES_AVAILABLE', 'nautilusburn')
    if 'nautilusburn' in conf.env['ENABLE_MODULES'] or 'all' in conf.env['ENABLE_MODULES']:
        if conf.check_pkg('libnautilus-burn >= 2.15.3 pygobject-2.0 ',
                          destvar='NAUTILUSBURN', mandatory=False):
            conf.env.append_value('MODULES_TO_BUILD', 'nautilusburn')


def codegen(bld, module):
    cmd = bld.create_obj('command-output')
    cmd.command = 'pygtk-codegen-2.0'
    cmd.command_is_external = True
    cmd.prio = 5
    cmd.argv = [
        '--py_ssize_t-clean',
        '--register', os.path.join(cmd.env['PYGTK_DEFSDIR'], 'pango-types.defs'),
        '--register', os.path.join(cmd.env['PYGTK_DEFSDIR'], 'gdk-types.defs'),
        '--register', os.path.join(cmd.env['PYGTK_DEFSDIR'], 'gtk-types.defs'),
        '--prefix', module,
        '--override', cmd.input_file("%s.override" % module),
        cmd.input_file("%s.defs" % module),
        ]
    cmd.stdout = '%s.c' % module
    return cmd


def build(bld):
    
    if 'nautilusburn' in bld.env()['MODULES_TO_BUILD']:
        codegen(bld, 'nautilus_burn')
        pyext = bld.create_pyext()
        pyext.source = 'nb_module.c nautilus_burn.c nb_track.c'
        pyext.includes = '.'
        pyext.target = 'nautilusburn'
        pyext.uselib = 'NAUTILUSBURN'
        pyext.inst_var = 'PYTHONDIR'
        pyext.inst_dir = 'gtk-2.0'

        defsdir = Common.install_files('DATADIR', os.path.join('pygtk', '2.0', 'defs'),
                                       ['nautilus_burn.defs'])

